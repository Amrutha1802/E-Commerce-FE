{"ast":null,"code":"var _jsxFileName = \"/home/amrutha/Desktop/React/e-commrce-fe day4/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\nimport { useState } from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport axios from 'axios';\n// import AddReview from './AddReview.js'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: '',\n  email: '',\n  rating: '',\n  review: ''\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Name is Required'),\n  email: Yup.string().email('Invalid email Format').required('Email is Required'),\n  rating: Yup.number().required(\"Please give a rating\").min(1, 'Rating value must be greater than 1').max(5, 'Rating value must be less than or equal to 5'),\n  review: Yup.string().required('Review is Required')\n});\nexport default function ReviewForm({\n  id\n}) {\n  _s();\n  const queryClient = useQueryClient();\n  const addReviewMutation = useMutation(newReview => axios.post(`http://localhost:4000/reviewsdata/${id}`, newReview), {\n    // After a successful mutation, invalidate and refetch the reviews data.\n    onSuccess: () => {\n      queryClient.invalidateQueries(['reviews', id]);\n    }\n  });\n  const onSubmit = (values, {\n    resetForm\n  }) => {\n    console.log('Form values', values);\n    addReviewMutation.mutate(values, {\n      onError: error => {\n        console.error('Error adding review:', error);\n      }\n    });\n    resetForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"rating\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"rating\",\n            name: \"rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"review\",\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"review\",\n            name: \"review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewForm, \"E6QWCFHGQhkhZ4+mGV3Ntaem2EQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","useEffect","Yup","Formik","Form","ErrorMessage","Field","useState","useMutation","useQueryClient","axios","jsxDEV","_jsxDEV","initialValues","name","email","rating","review","validationSchema","object","string","required","number","min","max","ReviewForm","id","_s","queryClient","addReviewMutation","newReview","post","onSuccess","invalidateQueries","onSubmit","values","resetForm","console","log","mutate","onError","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlfor","type","_c","$RefreshReg$"],"sources":["/home/amrutha/Desktop/React/e-commrce-fe day4/src/components/ReviewForm.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport * as Yup from 'yup'\nimport { Formik,Form,ErrorMessage,Field } from 'formik'\nimport { useState } from 'react'\nimport { useMutation,useQueryClient } from 'react-query'\nimport axios from 'axios'\n// import AddReview from './AddReview.js'\n\n\nconst initialValues={\n    name:'',\n    email:'',\n    rating:'',\n    review:''\n}\n\nconst validationSchema=Yup.object({\n    name: Yup.string().required('Name is Required'),\n    email:Yup.string().email('Invalid email Format').required('Email is Required'),\n    rating:Yup.number().required(\"Please give a rating\").min(1,'Rating value must be greater than 1').max(5,'Rating value must be less than or equal to 5'),\n    review:Yup.string().required('Review is Required')\n})\n\nexport default function ReviewForm({id}) {\n  const queryClient = useQueryClient();\n\n  const addReviewMutation = useMutation(\n    (newReview) => axios.post(`http://localhost:4000/reviewsdata/${id}`, newReview),\n    {\n      // After a successful mutation, invalidate and refetch the reviews data.\n      onSuccess: () => {\n        queryClient.invalidateQueries(['reviews', id]);\n      }\n    }\n  );\n    const onSubmit=(values,{resetForm})=>{\n      console.log('Form values',values);\n      addReviewMutation.mutate(values, {\n        onError: (error) => {\n          console.error('Error adding review:', error);\n        }\n      });\n      resetForm();\n    }\n  return (\n    <div>\n        <h1>Form</h1>\n    <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}>\n        <Form> \n            <div className='form-comp'>\n            <label htmlfor='name'>Name</label>\n            <Field type='text' \n                id='name' \n                name='name'\n            />\n            </div>\n            <ErrorMessage name='name'/>\n            <div className='form-comp'>\n            <label htmlfor='email'>E-mail</label>\n            <Field type='email' \n                id='email' \n                name='email' \n            />\n            </div>\n            <ErrorMessage name='email'/>\n            <div className='form-comp'>\n            <label htmlfor='rating'>Rating</label>\n            <Field type='text' \n                id='rating' \n                name='rating' \n            />\n            </div>\n            <ErrorMessage name='rating'/>\n            <div className='form-comp'>\n            <label htmlfor='review'>Review</label>\n            <Field type='text' \n                id='review' \n                name='review' \n            />\n            </div>\n            <ErrorMessage name='review'/>\n            <button type='submit'>Submit</button>\n            \n        </Form>\n    </Formik>\n    {/* <AddReview/> */}\n    \n    </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}