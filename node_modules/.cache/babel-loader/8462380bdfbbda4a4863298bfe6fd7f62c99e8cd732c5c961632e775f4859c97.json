{"ast":null,"code":"var _jsxFileName = \"/home/amrutha/Desktop/React/e-commrce-fe day4/src/components/ReviewForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport * as Yup from 'yup';\nimport { Formik, Form, ErrorMessage, Field } from 'formik';\nimport '../Styles/Reviewform.css';\nimport { useMutation, useQueryClient } from 'react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialValues = {\n  name: '',\n  email: '',\n  rating: '',\n  review: ''\n};\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Name is Required'),\n  email: Yup.string().email('Invalid email Format').required('Email is Required'),\n  rating: Yup.number().required(\"Please give a rating\").min(1, 'Rating value must be greater than 1').max(5, 'Rating value must be less than or equal to 5'),\n  review: Yup.string().required('Review is Required')\n});\nexport default function ReviewForm({\n  id\n}) {\n  _s();\n  const queryClient = useQueryClient();\n  const addReviewMutation = useMutation(newReview => {\n    return axios.get(`http://localhost:4000/reviewsdata/${id}`).then(response => {\n      const existingData = response.data;\n      console.log(existingData.reviewsofproduct);\n      const updatedData = {\n        reviewsofproduct: newReview\n      };\n      console.log(\"updatedData\", [...existingData.reviewsofproduct, newReview]);\n      return axios.post(`http://localhost:4000/reviewsdata/${id}/create`, updatedData);\n    });\n  }, {\n    onSuccess: () => {\n      console.log(\"success\");\n      queryClient.invalidateQueries(['reviewsdata', id]);\n    },\n    onError: e => {\n      console.log(\"error\", e);\n      // queryClient.invalidateQueries(['reviewsdata', id]);\n    }\n  }, 'newdata');\n  const onSubmit = (values, {\n    resetForm\n  }) => {\n    console.log('Form values', values);\n    addReviewMutation.mutate(values, {\n      onError: error => {\n        console.error('Error adding review:', error);\n      }\n    });\n    resetForm();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: onSubmit,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"email\",\n            children: \"E-mail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"rating\",\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"rating\",\n            name: \"rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-comp\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlfor: \"review\",\n            children: \"Review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            id: \"review\",\n            name: \"review\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n// const response = await axios.get(\"http://localhost:4000/reviewsdata/\");\n//   console.log(response.data);\n//   axios.get(\"http://localhost:4000/reviewsdata/\")\n//   .then(response => {\n//     const existingData = response.data;\n//     const val=existingData.find(item=>item.id===id);\n//     const existingReviews=val.reviewsofproduct;\n//     console.log(\"reviews are\")\n//     console.log(existingReviews);\n//     const update=[...existingReviews,values];\n//     console.log(update);\n//     axios.post(\"http://localhost:4000/reviewsdata/\", {\n//       id:1,\n//       reviewsofproduct: update\n//     })\n//     .then(response => {\n//       console.log('Reviews updated successfully:', response.data);\n//     })\n//     .catch(error => {\n//       console.error('Error updating reviews:', error);\n//     });\n// existingReviews.push(values);\n// // existingReviews.push(values);\n// console.log(existingReviews);\n// const updatedData = {\n//   id:3,\n//   reviewsofproduct:[]\n// };\n// console.log(updatedData);\n// console.log({id});\n// console.log(existingData[id-1]);\n// const prod=existingData[id-1];\n// prod.reviewsofproduct.push(values);\n// existingData[id-1].reviewsofproduct.push(values);\n// axios.post(\"http://localhost:4000/reviewsdata/\", {\n//   id:1,\n//   reviewsofproduct:[values,...existingReviews]\n// })\n//   .then(response => {\n//     console.log('Product  added successfully:', response.data);\n//   })\n//   .catch(error => { \n//     console.error('Error adding product:', error);\n//   });\n// })\n// .catch(error => {\n//   console.error('Error fetching existing data:', error);\n// });\n_s(ReviewForm, \"E6QWCFHGQhkhZ4+mGV3Ntaem2EQ=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = ReviewForm;\nvar _c;\n$RefreshReg$(_c, \"ReviewForm\");","map":{"version":3,"names":["React","Yup","Formik","Form","ErrorMessage","Field","useMutation","useQueryClient","axios","jsxDEV","_jsxDEV","initialValues","name","email","rating","review","validationSchema","object","string","required","number","min","max","ReviewForm","id","_s","queryClient","addReviewMutation","newReview","get","then","response","existingData","data","console","log","reviewsofproduct","updatedData","post","onSuccess","invalidateQueries","onError","e","onSubmit","values","resetForm","mutate","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlfor","type","_c","$RefreshReg$"],"sources":["/home/amrutha/Desktop/React/e-commrce-fe day4/src/components/ReviewForm.js"],"sourcesContent":["import React from 'react'\nimport * as Yup from 'yup'\nimport { Formik,Form,ErrorMessage,Field } from 'formik'\nimport '../Styles/Reviewform.css'\nimport { useMutation,useQueryClient } from 'react-query'\nimport axios from 'axios'\n\nconst initialValues={\n    name:'',\n    email:'',\n    rating:'',\n    review:''\n}\n\nconst validationSchema=Yup.object({\n    name: Yup.string().required('Name is Required'),\n    email:Yup.string().email('Invalid email Format').required('Email is Required'),\n    rating:Yup.number().required(\"Please give a rating\").min(1,'Rating value must be greater than 1').max(5,'Rating value must be less than or equal to 5'),\n    review:Yup.string().required('Review is Required')\n})\n\nexport default function ReviewForm({id}) {\n  const queryClient = useQueryClient();\n  const addReviewMutation = useMutation(\n    (newReview) => {\n      return axios.get(`http://localhost:4000/reviewsdata/${id}`).then((response) => {\n        const existingData = response.data;\n        console.log(existingData.reviewsofproduct);\n        const updatedData = {\n          reviewsofproduct:  newReview\n        };\n        console.log(\"updatedData\",[...existingData.reviewsofproduct, newReview]);\n        return axios.post(`http://localhost:4000/reviewsdata/${id}/create`, updatedData);\n      });\n    },\n    {\n      onSuccess: () => {\n        console.log(\"success\")\n        queryClient.invalidateQueries(['reviewsdata', id]);\n      }\n    ,onError: (e) => {\n      console.log(\"error\",e)\n      // queryClient.invalidateQueries(['reviewsdata', id]);\n    }\n    }\n  ,'newdata');\n    const onSubmit=(values,{resetForm})=>{\n      console.log('Form values',values);\n      addReviewMutation.mutate(values, {\n        onError: (error) => {\n          console.error('Error adding review:', error);\n        }\n      });\n      resetForm();\n  }\n  return (\n    <div>\n        <h1>Form</h1>\n        <p>{id}</p>\n    <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}>\n        <Form> \n            <div className='form-comp'>\n            <label htmlfor='name'>Name</label>\n            <Field type='text' \n                id='name' \n                name='name'\n            />\n            </div>\n            <ErrorMessage name='name'/>\n            <div className='form-comp'>\n            <label htmlfor='email'>E-mail</label>\n            <Field type='email' \n                id='email' \n                name='email' \n            />\n            </div>\n            <ErrorMessage name='email'/>\n            <div className='form-comp'>\n            <label htmlfor='rating'>Rating</label>\n            <Field type='text' \n                id='rating' \n                name='rating' \n            />\n            </div> \n            <ErrorMessage name='rating'/>\n            <div className='form-comp'>\n            <label htmlfor='review'>Review</label>\n            <Field type='text' \n                id='review' \n                name='review' \n            />\n            </div>\n            <ErrorMessage name='review'/>\n            <button type='submit'>Submit</button>\n            \n      \n            \n        </Form>\n    </Formik>\n     {/* <AddReview/> */}\n    \n    </div>\n  )\n}\n\n\n // const response = await axios.get(\"http://localhost:4000/reviewsdata/\");\n      //   console.log(response.data);\n      //   axios.get(\"http://localhost:4000/reviewsdata/\")\n      //   .then(response => {\n      //     const existingData = response.data;\n      //     const val=existingData.find(item=>item.id===id);\n      //     const existingReviews=val.reviewsofproduct;\n      //     console.log(\"reviews are\")\n      //     console.log(existingReviews);\n      //     const update=[...existingReviews,values];\n      //     console.log(update);\n      //     axios.post(\"http://localhost:4000/reviewsdata/\", {\n      //       id:1,\n      //       reviewsofproduct: update\n      //     })\n      //     .then(response => {\n      //       console.log('Reviews updated successfully:', response.data);\n      //     })\n      //     .catch(error => {\n      //       console.error('Error updating reviews:', error);\n      //     });\n          // existingReviews.push(values);\n          // // existingReviews.push(values);\n          // console.log(existingReviews);\n          // const updatedData = {\n          //   id:3,\n          //   reviewsofproduct:[]\n          // };\n          // console.log(updatedData);\n          // console.log({id});\n          // console.log(existingData[id-1]);\n          // const prod=existingData[id-1];\n          // prod.reviewsofproduct.push(values);\n          // existingData[id-1].reviewsofproduct.push(values);\n          // axios.post(\"http://localhost:4000/reviewsdata/\", {\n          //   id:1,\n          //   reviewsofproduct:[values,...existingReviews]\n          // })\n          //   .then(response => {\n          //     console.log('Product  added successfully:', response.data);\n          //   })\n          //   .catch(error => { \n          //     console.error('Error adding product:', error);\n          //   });\n        // })\n        // .catch(error => {\n        //   console.error('Error fetching existing data:', error);\n        // });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}